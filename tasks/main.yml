---

- name: copy rpm gpg keys
  copy: src="etc.pki.rpm-gpg.{{ item }}" dest="/etc/pki/rpm-gpg/{{ item }}" owner=root group=root mode=0644
  with_items:
    - GPG-KEY-influxdb
  when: influxdb_use_public_repos|default(False)
  tags: ['influxdb', 'repos']

- name: install rpm gpg keys
  rpm_key: state=present key="/etc/pki/rpm-gpg/{{ item }}"
  with_items:
    - GPG-KEY-influxdb
  when: influxdb_use_public_repos|default(False)
  tags: ['influxdb', 'repos']

- name: install yum repos
  template: src="etc.yum.repos.d.{{ item }}.j2" dest="/etc/yum.repos.d/{{ item }}" owner=root group=root mode=0644
  with_items:
    - influxdb.repo
  when: influxdb_use_public_repos|default(False)
  tags: ['influxdb', 'repos']

- name: ensure influxdb packages are installed
  yum: name="{{ influxdb_packages }}" state=present
  tags: ['influxdb']

- name: ensure chronograf is installed
  yum: name="chronograf" state=present
  when: influxdb_install_chronograf|default(False)
  tags: ['influxdb']

- name: place chronograf systemd defaults
  template:
    src: etc.default.chronograf.j2
    dest: /etc/default/chronograf
    owner: root
    group: root
    mode: 0640
  when: influxdb_install_chronograf|default(False)
  tags: ['influxdb']

- name: place influxdb config
  template:
    src: etc.influxdb.influxdb.conf.j2
    dest: /etc/influxdb/influxdb.conf
    owner: root
    group: influxdb
    mode: 0640
  notify: restart influxdb
  tags: ['influxdb']

- name: ensure influxdb base dir exists
  file: path="{{ influxdb_base_dir }}" state=directory owner="{{ influxdb_user }}" group="{{ influxdb_user }}"
  tags: ['influxdb']

- name: ensure httpd config is in place
  template:
    src: "etc.httpd.conf.d.{{ item }}.conf.j2"
    dest: "/etc/httpd/conf.d/{{ item }}.conf"
    owner: root
    group: root
    mode: 0640
  with_items:
    - influxdb
    - ssl
  notify: reload httpd
  tags: ['influxdb']

- name: ensure influxdb cert is in place
  copy: content="{{ influxdb_ssl_cert }}" dest="/etc/pki/tls/certs/influxdb.crt" mode=0640 owner=root group=root
  notify: reload httpd
  tags: ['influxdb', 'certificates']

- name: ensure influxdb key is in place
  copy: content="{{ influxdb_ssl_key }}" dest="/etc/pki/tls/private/influxdb.key" mode=0640 owner=root group=root
  notify: reload httpd
  tags: ['influxdb', 'certificates']

- name: ensure influxdb cert chain is in place
  copy: content="{{ influxdb_ssl_chain }}" dest="/etc/pki/tls/certs/influxdb-bundle.crt" mode=0640 owner=root group=root
  when: influxdb_ssl_use_chain|default(false)
  notify: reload httpd
  tags: ['influxdb', 'certificates']
  
- name: ensure backup dirs are present
  file:
    dest: "{{ item }}"
    owner: "{{ influxdb_user }}"
    group: "{{ influxdb_user }}"
    mode: 0750
    state: directory
  with_items:
    - "{{ influxdb_backup_dir }}"
    - /opt/influxdb/scripts
  when: influxdb_backup_enabled|default(False)
  tags: ['influxdb']

- name: place backup scripts
  template:
    src: "opt.influxdb.scripts.backup_influxdb.sh.j2"
    dest: "/opt/influxdb/scripts/backup_influxdb.sh"
    owner: "{{ influxdb_user }}"
    group: "{{ influxdb_user }}"
    mode: 0700
  when: influxdb_backup_enabled|default(False)
  tags: ['influxdb']

- name: enable backup cron
  cron:
    name: "{{ item.name }}"
    minute: "{{ item.minute }}"
    hour: "{{ item.hour }}"
    user: "{{ item.user }}"
    job: "{{ item.job }}"
    cron_file: "{{ item.cronfile }}"
  with_items: "{{ influxdb_backup_crons }}"
  when: 
  	- influxdb_backup_enabled|default(False)
    - influxdb_backup_snitch is not defined
  tags: ['influxdb']

- name: enable snitch backup cron
  cron:
    name: "{{ item.name }}"
    minute: "{{ item.minute }}"
    hour: "{{ item.hour }}"
    user: "{{ item.user }}"
    job: "{{ item.job }}"
    cron_file: "{{ item.cronfile }}"
  with_items: "{{ influxdb_snitch_backup_crons }}"
  when: 
  	- influxdb_backup_enabled|default(False)
  	- influxdb_backup_snitch is defined
  tags: ['influxdb']

- name: configure snmpcollector
  include: snmpcollector.yml
  when: influxdb_install_snmpcollector
  tags: ['influxdb', 'influxdb_snmpcollector']

- name: ensure influxdb is started and enabled
  service: name=influxdb state=started enabled=yes
  tags: ['influxdb']

- name: ensure chronograf is started and enabled
  service: name=chronograf state=started enabled=yes
  when: influxdb_install_chronograf
  tags: ['influxdb']

- name: place collectd auth file if necessary
  template:
    src: "etc.influxdb.collectd_auth_file.j2"
    dest: "/etc/influxdb/collectd_auth_file"
    owner: root
    group: influxdb
    mode: 0640
  when: influxdb_collectd_authfile_users|default(False)
  tags: ['influxdb']

#- name: ensure snmpcollector is started and enabled
#  service: name=snmpcollector state=started enabled=yes
#  when: influxdb_install_snmpcollector
#  tags: ['influxdb']

